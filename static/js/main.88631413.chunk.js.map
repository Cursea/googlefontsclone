{"version":3,"sources":["Navbar.js","SideDrawer.js","Backdrop.js","Searchbar.js","FontCard.js","quotes.js","Main.js","Footer.js","FontTags.js","BottomDrawer.js","App.js","index.js"],"names":["Navbar","sideDrawerToggle","className","onClick","style","color","href","target","rel","SideDrawer","isSideDrawerOpen","transform","Backdrop","removeDrawers","Searchbar","searchFonts","typeSomething","fontSize","handleChange","toggleTheme","listGridToggle","isList","reset","sticky","border","type","name","value","placeholder","onChange","display","FontCard","addPlusSigns","familyName","addFont","Helmet","fontFamily","randomQuotes","a","i","length","j","Math","floor","random","shuffle","Main","setSticky","useState","fonts","setFonts","numberOfFonts","setNumberOfFonts","atBottom","setAtBottom","atTop","setAtTop","useEffect","fetch","response","json","data","fontsData","items","fetchData","displayedFonts","filter","font","family","toLowerCase","indexOf","slice","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","pageYOffset","addEventListener","removeEventListener","increaseNoOfFonts","prevnum","assignQuote","index","inspirationalQuotes","gridTemplateColumns","map","key","scrollTo","Footer","FontTags","clearSelectedFont","BottomDrawer","isBottomDrawerOpen","bottomDrawerToggle","addedFonts","clearAllSelectedFonts","cursor","tag","margin","join","addOrSigns","GlobalStyle","createGlobalStyle","props","theme","mode","App","useReducer","state","newState","isDarkTheme","userInput","setUserInput","setAddedFonts","localStorage","getItem","JSON","parse","setItem","stringify","split","event","selectedFont","Set","currentFont","ReactDOM","render","getElementById"],"mappings":"8PAyDeA,MAvDf,YAAuC,IAArBC,EAAoB,EAApBA,iBAChB,OACE,gCACE,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,gBACf,0CAEF,6BACE,yBAAKA,UAAU,gBAAgBC,QAASF,IACxC,4BACE,4BACE,uBACEG,MAAO,CAAEC,MAAO,qBAChBC,KAAM,2BACNC,OAAO,SACPC,IAAI,uBAJN,YASF,4BACE,uBACEF,KAAM,oCACNC,OAAO,SACPC,IAAI,uBAHN,aAQF,4BACE,uBACEF,KACE,4GAEFC,OAAO,SACPC,IAAI,uBALN,aAUF,4BACE,uBACEF,KAAM,iCACNC,OAAO,SACPC,IAAI,uBAHN,cCkBGC,MA3Df,YAA2C,IAArBC,EAAoB,EAApBA,iBACpB,OACE,yBACER,UAAU,cACVE,MAAOM,EAAmB,CAAEC,UAAW,iBAAoB,MAE3D,yBAAKT,UAAU,sBACb,yBAAKA,UAAU,gBACf,0CAEF,6BACA,4BACE,4BACE,uBACEE,MAAO,CAAEC,MAAO,qBAChBC,KAAM,2BACNC,OAAO,SACPC,IAAI,uBAEJ,yBAAKN,UAAU,eANjB,YAUF,4BACE,uBACEI,KAAM,oCACNC,OAAO,SACPC,IAAI,uBAEJ,yBAAKN,UAAU,eALjB,aASF,4BACE,uBACEI,KACE,4GAEFC,OAAO,SACPC,IAAI,uBAEJ,yBAAKN,UAAU,qBAPjB,aAWF,4BACE,uBACEI,KAAM,iCACNC,OAAO,SACPC,IAAI,uBAEJ,yBAAKN,UAAU,sBALjB,aC1CKU,MAJf,YAAsC,IAAlBC,EAAiB,EAAjBA,cAClB,OAAO,yBAAKX,UAAU,WAAWC,QAASU,KCuE7BC,MAxEf,YAUI,IATFC,EASC,EATDA,YACAC,EAQC,EARDA,cACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,aACAC,EAKC,EALDA,YACAC,EAIC,EAJDA,eACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,MACAC,EACC,EADDA,OAEA,OACE,yBACErB,UACEqB,EACI,yCACA,wBAGN,yBAAKrB,UAAU,aAAaE,MAAOmB,EAAS,CAAEC,OAAQ,QAAW,MAC/D,yBAAKtB,UAAU,iBAEf,2BACEuB,KAAK,OACLC,KAAK,cACLC,MAAOZ,EACPb,UAAU,eACV0B,YAAY,eACZC,SAAUX,IAGZ,2BACEO,KAAK,OACLC,KAAK,gBACLC,MAAOX,EACPd,UAAU,iBACV0B,YAAY,iBACZC,SAAUX,IAGZ,4BAAQS,MAAOV,EAAUS,KAAK,WAAWG,SAAUX,GACjD,4BAAQS,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,SAGF,yBAAKzB,UAAU,sBACb,yBAAKA,UAAU,eAAeC,QAASgB,KAGzC,yBAAKjB,UAAU,qBACb,yBACEA,UAAU,aACVC,QAASiB,EACThB,MAAOiB,EAAS,CAAES,QAAS,QAAW,CAAEA,QAAS,aAEnD,yBACE5B,UAAU,WACVC,QAASiB,EACThB,MAAOiB,EAAS,CAAES,QAAS,WAAc,CAAEA,QAAS,WAIxD,yBAAK5B,UAAU,eAAeC,QAASmB,O,gCC3BhCS,MAtCf,YAMI,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,WACAjB,EAGC,EAHDA,cACAC,EAEC,EAFDA,SACAiB,EACC,EADDA,QAEA,OACE,yBAAKhC,UAAU,YACb,yBAAKA,UAAU,cACb,kBAACiC,EAAA,OAAD,KAEE,0BACE7B,KAAI,kDAA6C0B,EAC/CC,IAEFzB,IAAI,gBAGR,4BAAKyB,GACL,yBACE/B,UAAU,oBACVC,QAAS,kBAAM+B,EAAQD,OAG3B,uBACE7B,MAAO,CACLa,SAAUA,EACVmB,WAAYH,IAGbjB,EAAe,OCExB,IAEeqB,EATf,SAAiBC,GACf,IAAK,IAAIC,EAAID,EAAEE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACrC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADL,EAEtB,CAACD,EAAEG,GAAIH,EAAEC,IAAvBD,EAAEC,GAFkC,KAE9BD,EAAEG,GAF4B,KAIvC,OAAOH,EAEYO,CApCN,CACb,6EACA,kIACA,yEACA,sHACA,kGACA,wIACA,2GACA,oGACA,iFACA,6GACA,oFACA,0FACA,+FACA,0GACA,gEACA,6GACA,uFACA,4EACA,gIACA,8GACA,kJACA,8FACA,gGACA,6IACA,yHCsGaC,MA3Hf,YASI,IARFd,EAQC,EARDA,aACAjB,EAOC,EAPDA,YACAC,EAMC,EANDA,cACAC,EAKC,EALDA,SACAI,EAIC,EAJDA,OACAa,EAGC,EAHDA,QACAX,EAEC,EAFDA,OACAwB,EACC,EADDA,UACC,EACyBC,mBAAS,IADlC,mBACMC,EADN,KACaC,EADb,OAEyCF,mBAAS,IAFlD,mBAEMG,EAFN,KAEqBC,EAFrB,OAG+BJ,oBAAS,GAHxC,mBAGMK,EAHN,KAGgBC,EAHhB,OAIyBN,oBAAS,GAJlC,mBAIMO,EAJN,KAIaC,EAJb,KAODC,qBAAU,WAAM,4CACd,gCAAAnB,EAAA,sEACyBoB,MACrB,+GAFJ,cACQC,EADR,gBAIqBA,EAASC,OAJ9B,OAIQC,EAJR,OAKQC,EAAYD,EAAKE,MACvBb,EAASY,GANX,4CADc,uBAAC,WAAD,wBASdE,KACC,IAGH,IAKMC,EALgBhB,EAAMiB,QAAO,SAAAC,GACjC,OAAyE,IAAlEA,EAAKC,OAAOC,cAAcC,QAAQvD,EAAYsD,kBAIlBE,MAAM,EAAGpB,GAS9C,SAASqB,IAELC,OAAOC,YAAcC,SAASC,gBAAgBC,UAAY,GAC1DF,SAASC,gBAAgBE,cAEzBxB,GAAY,GAEa,IAAvBmB,OAAOM,YACTvB,GAAS,GAETA,GAAS,GAEPiB,OAAOM,YAAc,GACvBhC,GAAU,GAEVA,GAAU,GArBdU,qBAAU,WAER,OADAgB,OAAOO,iBAAiB,SAAUR,GAC3B,kBAAMC,OAAOQ,oBAAoB,SAAUT,MACjD,IAuBHf,qBAAU,WACHJ,GACL6B,MACC,CAAC7B,IAGJ,IAAM6B,EAAoB,WACxB9B,GAAiB,SAAA+B,GAAO,OAAIA,EAAU,MACtC7B,GAAY,IAIR8B,EAAc,SAAAC,GAClB,OAAOC,EAAoBD,EAAQC,EAAoB9C,SAGzD,OACE,6BACE,yBACEtC,UACEqB,EACI,uCACA,uBAGN,yBACErB,UAAU,YACVE,MACEiB,EACI,CAAEkE,oBAAqB,OACvB,CAAEA,oBAAqB,KAG5BtB,EAAeuB,KAAI,SAACrB,EAAMkB,GAAP,OAClB,kBAAC,EAAD,CACEI,IAAKtB,EAAKC,OACVnC,WAAYkC,EAAKC,OACjBpD,cAC2B,IAAzBA,EAAcwB,OAAe4C,EAAYC,GAASrE,EAEpDC,SAAUA,EACViB,QAASA,EACTF,aAAcA,SAKtB,yBACE9B,UAAU,SACVC,QAAS,WACPsE,OAAOiB,SAAS,EAAG,IAErBtF,MAAOmD,EAAQ,CAAEzB,QAAS,QAAW,CAAEA,QAAS,SAEhD,yBAAK5B,UAAU,2BCxGRyF,MAff,WACE,OACE,+DAC+B,IAC7B,uBACErF,KAAK,8CACLC,OAAO,SACPC,IAAI,uBAHN,YCQSoF,MAZf,YAAgD,IAA5BzB,EAA2B,EAA3BA,KAAM0B,EAAqB,EAArBA,kBACxB,OACE,yBAAK3F,UAAU,YACb,2BAAIiE,GACJ,yBACEjE,UAAU,qBACVC,QAAS,kBAAM0F,EAAkB1B,QCkE1B2B,MAvEf,YAOI,IANF9D,EAMC,EANDA,aACA+D,EAKC,EALDA,mBACAC,EAIC,EAJDA,mBACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,sBACAL,EACC,EADDA,kBAOA,OACE,yBACE3F,UAAU,gBACVE,MACE2F,EACI,CAAEpF,UAAW,iBACb,CAAEA,UAAW,sBAGnB,yBACET,UAAU,qBACVC,QAAS6F,EACT5F,MACE6F,EAAWzD,OAAS,EAAI,CAAE2D,OAAQ,WAAc,CAAEA,OAAQ,SAG5D,2BACGF,EAAWzD,OADd,IAC6C,IAAtByD,EAAWzD,OAAe,SAAW,WAAY,IADxE,aAMF,yBAAKtC,UAAU,sBACb,iDACA,yBAAKA,UAAU,kBAAkBC,QAAS+F,GAA1C,aAIA,yBAAKhG,UAAU,aACZ,IAEA+F,EAAWT,KAAI,SAAAY,GAAG,OACjB,kBAAC,EAAD,CACEX,IAAKW,EACLjC,KAAMiC,EACNP,kBAAmBA,QAKzB,6BAEA,uBAAGzF,MAAO,CAAEiG,OAAQ,aAApB,sGAKA,uBAAGnG,UAAU,QACV,IADH,8DAnDa,SAAA+F,GACjB,OAAOA,EAAWK,KAAK,KAqDuCC,CACtDN,EAAWT,KAAI,SAAArB,GAAI,OAAInC,EAAamC,OAJxC,wC,yhBCnDR,IAAMqC,EAAcC,YAAH,KAEO,SAAAC,GAAK,OAAKA,EAAMC,MAAMC,KAAO,OAAS,UACjD,SAAAF,GAAK,OAAKA,EAAMC,MAAMC,KAAO,OAAS,qBAGtC,SAAAF,GAAK,OACZA,EAAMC,MAAMC,KAAO,qBAGD,SAAAF,GAAK,OACvBA,EAAMC,MAAMC,KACR,gGACA,kGACK,SAAAF,GAAK,OAAKA,EAAMC,MAAMC,KAAO,IAAM,SA2JnCC,MAvJf,WAAgB,IAAD,EACqBC,sBAChC,SAACC,EAAOC,GAAR,O,yVAAA,IAA2BD,EAA3B,GAAqCC,KACrC,CACEtG,kBAAkB,EAClBK,YAAa,GACbC,cAAe,GACfC,SAAU,OACVgG,aAAa,EACb5F,QAAQ,EACR0E,oBAAoB,IAVX,mBACNmB,EADM,KACKC,EADL,OAaenE,oBAAS,GAbxB,mBAaNzB,EAbM,KAaEwB,EAbF,OAcuBC,mBAAS,IAdhC,mBAcNiD,EAdM,KAcMmB,EAdN,KAiBb3D,qBAAU,WACR,IAAMI,EAAOwD,aAAaC,QAAQ,qBAC9BzD,GACFuD,EAAcG,KAAKC,MAAM3D,MAE1B,IAGHJ,qBAAU,WACR4D,aAAaI,QAAQ,oBAAqBF,KAAKG,UAAUzB,MACxD,CAACA,IA+BJxC,qBAAU,WACkB,IAAtBwC,EAAWzD,QACb2E,EAAa,CAAEpB,oBAAoB,MAEpC,CAACE,IAGJ,IAAMjE,EAAe,SAAAC,GACnB,OAAiC,IAA7BA,EAAWqC,QAAQ,KACdrC,EAEAA,EAAW0F,MAAM,KAAKrB,KAAK,MAgCtC,OACE,kBAAC,IAAD,CAAeK,MAAO,CAAEC,KAAMM,EAAUD,cACtC,oCACE,kBAACT,EAAD,MACA,6BACE,kBAAC,EAAD,CAAQvG,iBA7ES,WACvBkH,EAAa,CAAEzG,kBAAmBwG,EAAUxG,sBA6EtC,kBAAC,EAAD,CAAYA,iBAAkBwG,EAAUxG,mBACvCwG,EAAUxG,kBAAoBwG,EAAUnB,mBACvC,6BACE,kBAAC,EAAD,CAAUlF,cApCA,WACpBsG,EAAa,CAAEzG,kBAAkB,IACjCyG,EAAa,CAAEpB,oBAAoB,QAoCzB,KAEJ,kBAAC,EAAD,CACEhF,YAAamG,EAAUnG,YACvBC,cAAekG,EAAUlG,cACzBC,SAAUiG,EAAUjG,SACpBC,aAtCW,SAAA0G,GAAU,IAAD,EACJA,EAAMrH,OAAtBmB,EADoB,EACpBA,KAAMC,EADc,EACdA,MACdwF,EAAa,eAAGzF,EAAOC,KAqCfR,YAlCU,WAClBgG,EAAa,CAAEF,aAAcC,EAAUD,eAkC/B7F,eA/Ba,WACrB+F,EAAa,CAAE9F,QAAS6F,EAAU7F,UA+B1BA,OAAQ6F,EAAU7F,OAClBC,MA7BI,WACZ6F,EAAa,CAAEpG,YAAa,KAC5BoG,EAAa,CAAEnG,cAAe,KAC9BmG,EAAa,CAAElG,SAAU,SACzBkG,EAAa,CAAEF,aAAa,IAC5BE,EAAa,CAAE9F,QAAQ,KAyBfE,OAAQA,IAGV,kBAAC,EAAD,CACES,aAAcA,EACdjB,YAAamG,EAAUnG,YACvBC,cAAekG,EAAUlG,cACzBC,SAAUiG,EAAUjG,SACpBI,OAAQ6F,EAAU7F,OAClBa,QA3FM,SAAA2F,GACdT,EAAc,YAAI,IAAIU,IAAJ,sBAAY7B,GAAZ,CAAwB4B,QA2FlCtG,OAAQA,EACRwB,UAAWA,IAEb,kBAAC,EAAD,CACEf,aAAcA,EACd+D,mBAAoBmB,EAAUnB,mBAC9BC,mBAzGiB,WACrBC,EAAWzD,OAAS,GACtB2E,EAAa,CAAEpB,oBAAqBmB,EAAUnB,sBAwGxCE,WAAYA,EACZC,sBA/FoB,WAC5BkB,EAAc,KA+FNvB,kBA3FgB,SAAAgC,GACxBT,EACEnB,EAAW/B,QAAO,SAAA6D,GAAW,OAAIA,IAAgBF,SA2F7C,kBAAC,EAAD,UC1KVG,IAASC,OAAO,kBAAC,EAAD,MAAStD,SAASuD,eAAe,W","file":"static/js/main.88631413.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar({ sideDrawerToggle }) {\r\n  return (\r\n    <header>\r\n      <div className=\"google-fonts-title\">\r\n        <div className=\"google-logo\"></div>\r\n        <h1>&nbsp;Fonts</h1>\r\n      </div>\r\n      <nav>\r\n        <div className=\"fa fa-navicon\" onClick={sideDrawerToggle}></div>\r\n        <ul>\r\n          <li>\r\n            <a\r\n              style={{ color: \" rgb(255, 86, 86)\" }}\r\n              href={\"https://fonts.google.com\"}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              CATALOG\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href={\"https://fonts.google.com/featured\"}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              FEATURED\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href={\r\n                \"https://design.google/library/google-fonts/?utm_source=Google&utm_medium=Fonts&utm_campaign=Article%20Tab\"\r\n              }\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              ARTICLES\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href={\"https://fonts.google.com/about\"}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              ABOUT\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction SideDrawer({ isSideDrawerOpen }) {\r\n  return (\r\n    <div\r\n      className=\"side-drawer\"\r\n      style={isSideDrawerOpen ? { transform: \"translateX(0)\" } : null} // slide drawer to the open position\r\n    >\r\n      <div className=\"google-fonts-title\">\r\n        <div className=\"google-logo\"></div>\r\n        <h1>&nbsp;Fonts</h1>\r\n      </div>\r\n      <hr />\r\n      <ul>\r\n        <li>\r\n          <a\r\n            style={{ color: \" rgb(255, 86, 86)\" }}\r\n            href={\"https://fonts.google.com\"}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"fa fa-home\"></div>\r\n            Catalog\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href={\"https://fonts.google.com/featured\"}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"fa fa-star\"></div>\r\n            Featured\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href={\r\n              \"https://design.google/library/google-fonts/?utm_source=Google&utm_medium=Fonts&utm_campaign=Article%20Tab\"\r\n            }\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"fa fa-align-left\"></div>\r\n            Articles\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href={\"https://fonts.google.com/about\"}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div className=\"fa fa-info-circle\"></div>\r\n            About\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\n\r\nfunction Backdrop({ removeDrawers }) {\r\n  return <div className=\"backdrop\" onClick={removeDrawers}></div>; // backdrop appears when a drawers open, it darkens everything except the drawers, closes all the drawers when backdrop is clicked\r\n}\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\n\r\nfunction Searchbar({\r\n  searchFonts,\r\n  typeSomething,\r\n  fontSize,\r\n  handleChange,\r\n  toggleTheme,\r\n  listGridToggle,\r\n  isList,\r\n  reset,\r\n  sticky\r\n}) {\r\n  return (\r\n    <div\r\n      className={\r\n        sticky\r\n          ? \"search-bar-container sticky-search-bar\"\r\n          : \"search-bar-container\"\r\n      }\r\n    >\r\n      <div className=\"search-bar\" style={sticky ? { border: \"none\" } : null}>\r\n        <div className=\"fa fa-search\"></div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchFonts\"\r\n          value={searchFonts}\r\n          className=\"search-fonts\"\r\n          placeholder=\"Search fonts\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"typeSomething\"\r\n          value={typeSomething}\r\n          className=\"type-something\"\r\n          placeholder=\"Type something\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <select value={fontSize} name=\"fontSize\" onChange={handleChange}>\r\n          <option value=\"20px\">20px</option>\r\n          <option value=\"24px\">24px</option>\r\n          <option value=\"32px\">32px</option>\r\n          <option value=\"40px\">40px</option>\r\n          <option value=\"64px\">64px</option>\r\n          <option value=\"90px\">90px</option>\r\n        </select>\r\n\r\n        <div className=\"background-chooser\">\r\n          <div className=\"fa fa-circle\" onClick={toggleTheme}></div>\r\n        </div>\r\n\r\n        <div className=\"list-grid-chooser\">\r\n          <div\r\n            className=\"fa fa-list\"\r\n            onClick={listGridToggle}\r\n            style={isList ? { display: \"none\" } : { display: \"initial\" }} // don't display the list icon when in list mode\r\n          ></div>\r\n          <div\r\n            className=\"fa fa-th\"\r\n            onClick={listGridToggle}\r\n            style={isList ? { display: \"initial\" } : { display: \"none\" }} // don't display the grid icon when in grid mode\r\n          ></div>\r\n        </div>\r\n\r\n        <div className=\"fa fa-repeat\" onClick={reset}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction FontCard({\r\n  addPlusSigns,\r\n  familyName,\r\n  typeSomething,\r\n  fontSize,\r\n  addFont\r\n}) {\r\n  return (\r\n    <div className=\"fontcard\">\r\n      <div className=\"font-title\">\r\n        <Helmet>\r\n          {/* Helmet adds the following to the head tag of index.html, add the neccesary link tag for each google fonts*/}\r\n          <link\r\n            href={`https://fonts.googleapis.com/css?family=${addPlusSigns(\r\n              familyName\r\n            )}`}\r\n            rel=\"stylesheet\"\r\n          ></link>\r\n        </Helmet>\r\n        <h4>{familyName}</h4>\r\n        <div\r\n          className=\"fa fa-plus-circle\"\r\n          onClick={() => addFont(familyName)} // add the corresponding font (font selected by user) into the addedFont array\r\n        ></div>\r\n      </div>\r\n      <p\r\n        style={{\r\n          fontSize: fontSize, //change the font size to what the user selected\r\n          fontFamily: familyName //change the font family to the corresponding font family of the fontcard\r\n        }}\r\n      >\r\n        {typeSomething}{\" \"}\r\n        {/* change the sample text to whatever the user type (or a randomly assigned quote if left empty) */}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FontCard;\r\n","const quotes = [\r\n  \"The Way Get Started Is To Quit Talking And Begin Doing. – Walt Disney\",\r\n  \"The Pessimist Sees Difficulty In Every Opportunity. The Optimist Sees Opportunity In Every Difficulty. – Winston Churchill\",\r\n  \"Don’t Let Yesterday Take Up Too Much Of Today. – Will Rogers\",\r\n  \"You Learn More From Failure Than From Success. Don’t Let It Stop You. Failure Builds Character. – Unknown\",\r\n  \"It’s Not Whether You Get Knocked Down, It’s Whether You Get Up. – Vince Lombardi\",\r\n  \"If You Are Working On Something That You Really Care About, You Don’t Have To Be Pushed. The Vision Pulls You. – Steve Jobs\",\r\n  \"People Who Are Crazy Enough To Think They Can Change The World, Are The Ones Who Do. – Rob Siltanen\",\r\n  \"Failure Will Never Overtake Me If My Determination To Succeed Is Strong Enough. – Og Mandino\",\r\n  \"We May Encounter Many Defeats But We Must Not Be Defeated. – Maya Angelou\",\r\n  \"Knowing Is Not Enough; We Must Apply. Wishing Is Not Enough; We Must Do. – Johann Wolfgang Von Goethe\",\r\n  \"We Generate Fears While We Sit. We Overcome Them By Action. – Dr. Henry Link\",\r\n  \"Whether You Think You Can Or Think You Can’t, You’re Right. – Henry Ford\",\r\n  \"The Man Who Has Confidence In Himself Gains The Confidence Of Others. – Hasidic Proverb\",\r\n  \"The Only Limit To Our Realization Of Tomorrow Will Be Our Doubts Of Today. – Franklin D. Roosevelt\",\r\n  \"Creativity Is Intelligence Having Fun. – Albert Einstein\",\r\n  \"What You Lack In Talent Can Be Made Up With Desire, Hustle And Giving 110% All The Time. – Don Zimmer\",\r\n  \"You Are Never Too Old To Set Another Goal Or To Dream A New Dream. – C.S. Lewis\",\r\n  \"To See What Is Right And Not Do It Is A Lack Of Courage. – Confucius\",\r\n  \"Fake It Until You Make It! Act As If You Had All The Confidence You Require Until It Becomes Your Reality. – Brian Tracy\",\r\n  \"The Future Belongs To The Competent. Get Good, Get Better, Be The Best! – Success Quote By Brian Tracy\",\r\n  \"For Every Reason It’s Not Possible, There Are Hundreds Of People Who Have Faced The Same Circumstances And Succeeded. – Jack Canfield\",\r\n  \"Things Work Out Best For Those Who Make The Best Of How Things Work Out. – John Wooden\",\r\n  \"Today’s Accomplishments Were Yesterday’s Impossibilities. – Robert H. Schuller\",\r\n  \"The Only Way To Do Great Work Is To Love What You Do. If You Haven’t Found It Yet, Keep Looking. Don’t Settle. – Steve Jobs\",\r\n  \"There Are No Limits To What You Can Accomplish, Except The Limits You Place On Your Own Thinking. – Brian Tracy\"\r\n];\r\n\r\n//shuffle the array (https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array)\r\nfunction shuffle(a) {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\nconst randomQuotes = shuffle(quotes);\r\n\r\nexport default randomQuotes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FontCard from \"./FontCard\";\r\nimport inspirationalQuotes from \"./quotes\";\r\n\r\nfunction Main({\r\n  addPlusSigns,\r\n  searchFonts,\r\n  typeSomething,\r\n  fontSize,\r\n  isList,\r\n  addFont,\r\n  sticky,\r\n  setSticky\r\n}) {\r\n  const [fonts, setFonts] = useState([]); // used to hold the fonts from google fonts API\r\n  const [numberOfFonts, setNumberOfFonts] = useState(20); // number of fonts to be displayed, initialise at 20\r\n  const [atBottom, setAtBottom] = useState(false); // state for if user has scrolled to bottom, used to render more fonts in\r\n  const [atTop, setAtTop] = useState(true); // state for if user has scrolled to top, used to remove the button to go back to top of page when user is at the top of the page\r\n\r\n  //fetch all the fonts from Google Fonts API and store in the font state\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        \"https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyBNl7lcNRNpxnZNrKVoDnoCXrN5a8jpCas&sort=popularity\"\r\n      );\r\n      const data = await response.json();\r\n      const fontsData = data.items;\r\n      setFonts(fontsData);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //search (filter) feature\r\n  const filteredFonts = fonts.filter(font => {\r\n    return font.family.toLowerCase().indexOf(searchFonts.toLowerCase()) !== -1;\r\n  });\r\n\r\n  //Only display some of the fonts (for infinite scroll feature)\r\n  const displayedFonts = filteredFonts.slice(0, numberOfFonts);\r\n\r\n  //add event listener to scroll please see handleScroll function\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  //change states depending where the user has scrolled to\r\n  function handleScroll() {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop + 2 >= // worked before with just !==, then today (22/10/19) stopped working even when I go back to previous commits with GIT???? Now have to change to + 2\r\n      document.documentElement.offsetHeight\r\n    ) {\r\n      setAtBottom(true);\r\n    }\r\n    if (window.pageYOffset === 0) {\r\n      setAtTop(true);\r\n    } else {\r\n      setAtTop(false);\r\n    }\r\n    if (window.pageYOffset > 95) {\r\n      setSticky(true); // sticky state is used for sticking searchbar to top of window when user scrolls down\r\n    } else {\r\n      setSticky(false);\r\n    }\r\n  }\r\n\r\n  //if atBottom is true run increaseNoOfFonts function\r\n  useEffect(() => {\r\n    if (!atBottom) return;\r\n    increaseNoOfFonts();\r\n  }, [atBottom]);\r\n\r\n  //increase the number of fonts and then set atBottom back to false\r\n  const increaseNoOfFonts = () => {\r\n    setNumberOfFonts(prevnum => prevnum + 12);\r\n    setAtBottom(false);\r\n  };\r\n\r\n  // assign a quote based on the index position of the fontcard\r\n  const assignQuote = index => {\r\n    return inspirationalQuotes[index % inspirationalQuotes.length];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          sticky\r\n            ? \"fontcards-container sticky-fontcards\" // adds another css class when searchbar sticks to top of page, as searchbar changes to position:fixed the fontcards will jump up as they now ignore the space taken by searchbar, so this css class stops all the font card from suddenly jumping\r\n            : \"fontcards-container\"\r\n        }\r\n      >\r\n        <div\r\n          className=\"fontcards\"\r\n          style={\r\n            isList // changes the amount of columns in the fontcards to one when user changes to list view\r\n              ? { gridTemplateColumns: \"1fr\" }\r\n              : { gridTemplateColumns: \"\" }\r\n          }\r\n        >\r\n          {displayedFonts.map((font, index) => (\r\n            <FontCard\r\n              key={font.family}\r\n              familyName={font.family}\r\n              typeSomething={\r\n                typeSomething.length === 0 ? assignQuote(index) : typeSomething //show whatever the user has type in the typesomething input box in the font card, if left blank assign a quote to be displayed\r\n              }\r\n              fontSize={fontSize}\r\n              addFont={addFont}\r\n              addPlusSigns={addPlusSigns}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"to-top\" // button to scroll to top of page\r\n        onClick={() => {\r\n          window.scrollTo(0, 0);\r\n        }}\r\n        style={atTop ? { display: \"none\" } : { display: \"flex\" }} // the to-top button disappears when user is scrolled to top of page\r\n      >\r\n        <div className=\"fa fa-long-arrow-up\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      Coded by Allan Sham | 2019 |{\" \"}\r\n      <a\r\n        href=\"https://github.com/shammy8/googlefontsclone\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Github\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction FontTags({ font, clearSelectedFont }) {\r\n  return (\r\n    <div className=\"font-tag\">\r\n      <p>{font}</p>\r\n      <div\r\n        className=\"fa fa-minus-circle\"\r\n        onClick={() => clearSelectedFont(font)} // remove the font from the addedFont state when the minus button is clicked\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FontTags;\r\n","import React from \"react\";\r\nimport FontTags from \"./FontTags.js\";\r\n\r\nfunction BottomDrawer({\r\n  addPlusSigns,\r\n  isBottomDrawerOpen,\r\n  bottomDrawerToggle,\r\n  addedFonts,\r\n  clearAllSelectedFonts,\r\n  clearSelectedFont\r\n}) {\r\n  // join each font with the | symbol, used to create the link tag\r\n  const addOrSigns = addedFonts => {\r\n    return addedFonts.join(\"|\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"bottom-drawer\"\r\n      style={\r\n        isBottomDrawerOpen // slide the bottom drawer up and down\r\n          ? { transform: \"translateY(0)\" }\r\n          : { transform: \"translateY(271px)\" }\r\n      }\r\n    >\r\n      <div\r\n        className=\"bottom-drawer-head\"\r\n        onClick={bottomDrawerToggle}\r\n        style={\r\n          addedFonts.length > 0 ? { cursor: \"pointer\" } : { cursor: \"auto\" }\r\n        }\r\n      >\r\n        <p>\r\n          {addedFonts.length} {addedFonts.length === 1 ? \"Family\" : \"Families\"}{\" \"}\r\n          Selected\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"bottom-drawer-main\">\r\n        <h2>Selected Families</h2>\r\n        <div className=\"clear-all-fonts\" onClick={clearAllSelectedFonts}>\r\n          Clear All\r\n        </div>\r\n\r\n        <div className=\"font-tags\">\r\n          {\" \"}\r\n          {/* For each font selected by user create a font tag to be display in the bottom drawer */}\r\n          {addedFonts.map(tag => (\r\n            <FontTags\r\n              key={tag}\r\n              font={tag}\r\n              clearSelectedFont={clearSelectedFont}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <p style={{ margin: \"10px 0px\" }}>\r\n          To embed your selected fonts into a webpage, copy this code into the\r\n          &lt;head&gt; of your HTML document.\r\n        </p>\r\n\r\n        <p className=\"code\">\r\n          {\" \"}\r\n          {/* create the link tag */}\r\n          {`<link href=\"https://fonts.googleapis.com/css?family=${addOrSigns(\r\n            addedFonts.map(font => addPlusSigns(font))\r\n          )}&display=swap\" rel=\"stylesheet\">`}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default BottomDrawer;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport SideDrawer from \"./SideDrawer.js\";\r\nimport Backdrop from \"./Backdrop.js\";\r\nimport Searchbar from \"./Searchbar.js\";\r\nimport Main from \"./Main.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport BottomDrawer from \"./BottomDrawer.js\";\r\nimport \"./App.css\";\r\n\r\n//styles for dark and light mode\r\nconst GlobalStyle = createGlobalStyle`\r\n  body, .side-drawer, footer, input, select, a, .search-bar-container {\r\n    background-color: ${props => (props.theme.mode ? \"#222\" : \"#FFF\")};\r\n    color: ${props => (props.theme.mode ? \"#FFF\" : \"rgb(68, 68, 68)\")}\r\n    }\r\n  .bottom-drawer {\r\n    color: ${props =>\r\n      props.theme.mode ? \"rgb(68, 68, 68)\" : \"rgb(68, 68, 68)\"}\r\n    }  \r\n  .google-logo {\r\n    background-image: ${props =>\r\n      props.theme.mode\r\n        ? \"url(https://www.gstatic.com/images/branding/googlelogo/1x/googlelogo_light_color_74x24dp.png)\"\r\n        : \"url(https://www.gstatic.com/images/branding/googlelogo/1x/googlelogo_dark_color_74x24dp.png)\"};\r\n    opacity: ${props => (props.theme.mode ? \"1\" : \"0.6\")}\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      isSideDrawerOpen: false,\r\n      searchFonts: \"\",\r\n      typeSomething: \"\",\r\n      fontSize: \"20px\",\r\n      isDarkTheme: false,\r\n      isList: false,\r\n      isBottomDrawerOpen: false\r\n    }\r\n  );\r\n  const [sticky, setSticky] = useState(false); //state used to stick the searchbar to the top of browser when user scrolls down\r\n  const [addedFonts, setAddedFonts] = useState([]); //state for user-selected fonts, used to create a link tag to be put in head tag of html document\r\n\r\n  //load the data in local storage into addedFonts at the first render\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"userSelectedFonts\");\r\n    if (data) {\r\n      setAddedFonts(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  //everytime addedFonts change put the addedFonts into local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"userSelectedFonts\", JSON.stringify(addedFonts));\r\n  }, [addedFonts]);\r\n\r\n  const sideDrawerToggle = () => {\r\n    setUserInput({ isSideDrawerOpen: !userInput.isSideDrawerOpen });\r\n  };\r\n\r\n  //allow user to open the bottom drawer only when there have been fonts selected\r\n  const bottomDrawerToggle = () => {\r\n    if (addedFonts.length > 0) {\r\n      setUserInput({ isBottomDrawerOpen: !userInput.isBottomDrawerOpen });\r\n    }\r\n  };\r\n\r\n  //adds selected fonts to the addedFonts array, but only add unique items\r\n  const addFont = selectedFont => {\r\n    setAddedFonts([...new Set([...addedFonts, selectedFont])]);\r\n  };\r\n\r\n  //clear all the selected fonts from the addedFont array\r\n  const clearAllSelectedFonts = () => {\r\n    setAddedFonts([]);\r\n  };\r\n\r\n  // remove the corresponding font from the addedFont array\r\n  const clearSelectedFont = selectedFont => {\r\n    setAddedFonts(\r\n      addedFonts.filter(currentFont => currentFont !== selectedFont)\r\n    );\r\n  };\r\n\r\n  // close the bottom drawer when all fonts are removed from addedFonts array\r\n  useEffect(() => {\r\n    if (addedFonts.length === 0) {\r\n      setUserInput({ isBottomDrawerOpen: false });\r\n    }\r\n  }, [addedFonts]);\r\n\r\n  // Add plus signs between words in the name of the font, to be used to create link tag for the head tag in html document\r\n  const addPlusSigns = familyName => {\r\n    if (familyName.indexOf(\" \") === -1) {\r\n      return familyName;\r\n    } else {\r\n      return familyName.split(\" \").join(\"+\");\r\n    }\r\n  };\r\n\r\n  // close all drawers\r\n  const removeDrawers = () => {\r\n    setUserInput({ isSideDrawerOpen: false });\r\n    setUserInput({ isBottomDrawerOpen: false });\r\n  };\r\n\r\n  //update the states when user enter something int the input boxes / changes font size\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setUserInput({ [name]: value });\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setUserInput({ isDarkTheme: !userInput.isDarkTheme });\r\n  };\r\n\r\n  const listGridToggle = () => {\r\n    setUserInput({ isList: !userInput.isList });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUserInput({ searchFonts: \"\" });\r\n    setUserInput({ typeSomething: \"\" });\r\n    setUserInput({ fontSize: \"20px\" });\r\n    setUserInput({ isDarkTheme: false });\r\n    setUserInput({ isList: false });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={{ mode: userInput.isDarkTheme }}>\r\n      <>\r\n        <GlobalStyle />\r\n        <div>\r\n          <Navbar sideDrawerToggle={sideDrawerToggle} />\r\n          <SideDrawer isSideDrawerOpen={userInput.isSideDrawerOpen} />\r\n          {userInput.isSideDrawerOpen || userInput.isBottomDrawerOpen ? ( // add a dark Backdrop when one of the drawer menus are open\r\n            <div>\r\n              <Backdrop removeDrawers={removeDrawers} />\r\n            </div>\r\n          ) : null}\r\n\r\n          <Searchbar\r\n            searchFonts={userInput.searchFonts}\r\n            typeSomething={userInput.typeSomething}\r\n            fontSize={userInput.fontSize}\r\n            handleChange={handleChange}\r\n            toggleTheme={toggleTheme}\r\n            listGridToggle={listGridToggle}\r\n            isList={userInput.isList}\r\n            reset={reset}\r\n            sticky={sticky}\r\n          />\r\n\r\n          <Main\r\n            addPlusSigns={addPlusSigns}\r\n            searchFonts={userInput.searchFonts}\r\n            typeSomething={userInput.typeSomething}\r\n            fontSize={userInput.fontSize}\r\n            isList={userInput.isList}\r\n            addFont={addFont}\r\n            sticky={sticky}\r\n            setSticky={setSticky}\r\n          />\r\n          <BottomDrawer\r\n            addPlusSigns={addPlusSigns}\r\n            isBottomDrawerOpen={userInput.isBottomDrawerOpen}\r\n            bottomDrawerToggle={bottomDrawerToggle}\r\n            addedFonts={addedFonts}\r\n            clearAllSelectedFonts={clearAllSelectedFonts}\r\n            clearSelectedFont={clearSelectedFont}\r\n          />\r\n          <Footer />\r\n        </div>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}